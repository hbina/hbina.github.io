<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home page? on hbina page</title><link>https://hbina.github.io/</link><description>Recent content in Home page? on hbina page</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sat, 16 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://hbina.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Multiplayer Cheating Is A Social Problem</title><link>https://hbina.github.io/20250816_cheating_is_a_social_problem/</link><pubDate>Sat, 16 Aug 2025 00:00:00 +0000</pubDate><guid>https://hbina.github.io/20250816_cheating_is_a_social_problem/</guid><description>&lt;p&gt;Recently, there have been some discussion in tackling cheating in video games using kernal anti-cheat.
This allows the program to run at a much lower level layer of the machine so that it can own and observe the whole system.
This is basically giving the program root access to your computer and so it can do whatever it want.
In general, you do not want to have other people to own your system.&lt;/p&gt;</description></item><item><title>Phenomenology of Lying (draft)</title><link>https://hbina.github.io/20250720_phenomenology-of-lying/</link><pubDate>Fri, 01 Aug 2025 21:51:09 +0800</pubDate><guid>https://hbina.github.io/20250720_phenomenology-of-lying/</guid><description>&lt;p&gt;This might be a bit &amp;ldquo;deep&amp;rdquo; but bear with me.&lt;/p&gt;
&lt;p&gt;There is an underlying reality that exists beyond our control.
To interact with it, we have our own approximation of reality so that we know how to operate or expect what is going to
happen.
When we communicate with each other, we are communicating this approximation of reality to each other.&lt;/p&gt;
&lt;p&gt;Honesty is merely the act of conveying what one&amp;rsquo;s actual approximation of reality (which is what they actually use to
operate on reality).&lt;/p&gt;</description></item><item><title>Recall and Tools Like It Are Bad If They're Effective (draft)</title><link>https://hbina.github.io/20250727_recall_paradox/</link><pubDate>Sun, 27 Jul 2025 00:00:00 +0000</pubDate><guid>https://hbina.github.io/20250727_recall_paradox/</guid><description>&lt;p&gt;When Microsoft announced Recall, the immediate backlash focused on privacy concerns and security vulnerabilities.
Critics are worried about hackers accessing screenshots of everything you&amp;rsquo;ve ever done on your computer. They worried
about
sensitive information being stored in plaintext databases.&lt;/p&gt;
&lt;p&gt;But I think we&amp;rsquo;re missing the bigger picture. The real problem with Recall isn&amp;rsquo;t that it might be hacked or misused. The
real problem is what happens if it works exactly as intended.&lt;/p&gt;</description></item><item><title>Going Passwordless Means Losing Privacy</title><link>https://hbina.github.io/20250720_passwordless_privacy/</link><pubDate>Sun, 20 Jul 2025 00:00:00 +0000</pubDate><guid>https://hbina.github.io/20250720_passwordless_privacy/</guid><description>&lt;p&gt;For the past 40 years, passwords have been our digital masks.&lt;/p&gt;
&lt;p&gt;When I log into a website, all they ask for is my password. Not my fingerprint, not my face, not verification that I am
physically who I claim to be. Just a string of characters that I happen to know. In that moment, I am not &amp;ldquo;Hanif Bin
Ariffin the person&amp;rdquo; &amp;ndash; I am simply someone who knows the secret &amp;ldquo;hunter2&amp;rdquo;.&lt;/p&gt;</description></item><item><title>Monad of Consciousness</title><link>https://hbina.github.io/20221220_monad_of_consciousness/</link><pubDate>Fri, 04 Jul 2025 00:00:00 +0000</pubDate><guid>https://hbina.github.io/20221220_monad_of_consciousness/</guid><description>&lt;h1 id="what-are-you"&gt;What Are You?&lt;/h1&gt;
&lt;p&gt;This might be the most important question you never ask yourself.&lt;/p&gt;
&lt;p&gt;Not &amp;ldquo;What do you do?&amp;rdquo; or &amp;ldquo;Where are you from?&amp;rdquo; but literally: what are you?&lt;/p&gt;
&lt;p&gt;Most people would say, &amp;ldquo;I&amp;rsquo;m my body&amp;rdquo; or &amp;ldquo;I&amp;rsquo;m my thoughts&amp;rdquo; or &amp;ldquo;I&amp;rsquo;m my personality.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;But if you look closely at your experience, something unexpected emerges.&lt;/p&gt;
&lt;p&gt;You can be aware of your body.&lt;/p&gt;
&lt;p&gt;You can observe your thoughts.&lt;/p&gt;
&lt;p&gt;You can notice your emotions coming and going.&lt;/p&gt;</description></item><item><title>Human (Dis)connection</title><link>https://hbina.github.io/20240407_human_disconnection/</link><pubDate>Sun, 07 Apr 2024 00:00:00 +0000</pubDate><guid>https://hbina.github.io/20240407_human_disconnection/</guid><description>&lt;p&gt;I had a memory from when I was growing up that I am not even sure is real or not.
The memory is that of staring at myself in the mirror and realizing that the person in the mirror is &amp;ldquo;me&amp;rdquo;.
It was a very stark moment of realization for me that &amp;ldquo;that is me, that will always be me. That&amp;rsquo;s it&amp;rdquo;.
I remember staring at the mirror for quite some,
Of course, I know that other people exist, and that they are living and interacting iamong each other.
Perhaps for a long time I never considered that I am &amp;hellip; one of the person?&lt;/p&gt;</description></item><item><title>A Retrospective on The Humble Programmer by Edsger W. Dijkstra</title><link>https://hbina.github.io/20230215_humble_programmer/</link><pubDate>Wed, 15 Feb 2023 00:00:00 +0000</pubDate><guid>https://hbina.github.io/20230215_humble_programmer/</guid><description>&lt;p&gt;The article is freely available &lt;a href="https://dl.acm.org/doi/10.1145/355604.361591"&gt;here&lt;/a&gt; or at the bottom where I have also
copied the transcript below for prosperity.
It is crazy to think how much foresight he had 50 years ago.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The increased power of the hardware, together with the perhaps even more dramatic increase in its reliability, made
solutions feasible that the programmer had not dared to dream about a few years before. And now, a few years later, he
had to dream about them and, even worse, he had to transform such dreams into reality!&lt;/p&gt;</description></item><item><title>Writing a basic redis clone in Go from scratch</title><link>https://hbina.github.io/2022122_redis_clone/</link><pubDate>Thu, 22 Dec 2022 00:00:00 +0000</pubDate><guid>https://hbina.github.io/2022122_redis_clone/</guid><description>&lt;h1 id="introduction"&gt;Introduction&lt;/h1&gt;
&lt;p&gt;In this tutorial, we will write a basic &lt;code&gt;redis&lt;/code&gt; server that is capable of responding to valid RESP requests.
In case you are not familiar with what &lt;code&gt;redis&lt;/code&gt; is, check out their &lt;a href="https://redis.io/"&gt;website&lt;/a&gt;.
Needless to say, it is an extremely popular caching mechanism that is used everywhere.&lt;/p&gt;
&lt;p&gt;However, you might think to yourself that implementing one is a daunting task.
I am going to show you that (minus all the critical performance requirements), a &lt;code&gt;redis&lt;/code&gt; server is in fact pretty simple.
I believe implementing one is a great way to learn about programming.
Plus, it also makes you appreciate the engineering challenges of developing a &lt;em&gt;good&lt;/em&gt; one.&lt;/p&gt;</description></item><item><title>Programming with Context (draft)</title><link>https://hbina.github.io/20221221_programming_with_context/</link><pubDate>Wed, 21 Dec 2022 00:00:00 +0000</pubDate><guid>https://hbina.github.io/20221221_programming_with_context/</guid><description>&lt;h2 id="disclaimer"&gt;Disclaimer&lt;/h2&gt;
&lt;p&gt;I have no formal traning in functional programming so if I have any mistakes here please feel free to correct and educate me!&lt;/p&gt;
&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In programming, we have to deal with a lot of complexities.
In my experience, there are 2 different kinds of complexities:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Business complexity.
This is the complexity of the requirement that have been tasked to us developers. For example, a requirement that says &amp;ldquo;User can go to our website to browse our catalogue&amp;rdquo;.
This is inherent.&lt;/p&gt;</description></item><item><title>Some Examples of List Homomorphism (draft)</title><link>https://hbina.github.io/20221220_list_homomorphism/</link><pubDate>Tue, 20 Dec 2022 00:00:00 +0000</pubDate><guid>https://hbina.github.io/20221220_list_homomorphism/</guid><description>&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;
&lt;p&gt;List homomorphism is a powerful concept that allows us to turn a computation into an embarrasingly parallel problem.&lt;/p&gt;
&lt;h2 id="code"&gt;Code&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-typescript" data-lang="typescript"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;// Basically need to satisfy this constraint
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;// f(list_one + list_two) === homo_list(f(list_one), f(list_two));
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;// The function &amp;#39;f&amp;#39; is a list homomorphism if there exists a function `homo_list` that satisfy the above equation
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;type&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;IntermediateState&lt;/span&gt; &lt;span style="color:#f92672"&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;mss&lt;/span&gt;: &lt;span style="color:#66d9ef"&gt;number&lt;/span&gt;; &lt;span style="color:#75715e"&gt;// the actual MSS of a given array
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;mss_from_left&lt;/span&gt;: &lt;span style="color:#66d9ef"&gt;number&lt;/span&gt;; &lt;span style="color:#75715e"&gt;// the MSS if we force subarray to include the first element
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;mss_from_right&lt;/span&gt;: &lt;span style="color:#66d9ef"&gt;number&lt;/span&gt;; &lt;span style="color:#75715e"&gt;// the MSS if we force the subarray to include the last element
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;total_sum&lt;/span&gt;: &lt;span style="color:#66d9ef"&gt;number&lt;/span&gt;; &lt;span style="color:#75715e"&gt;// simply the total sum of the array
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;&lt;/span&gt;};
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;// Transforming a single element into intermediate state is trivial
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;&lt;/span&gt;&lt;span style="color:#66d9ef"&gt;const&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;f&lt;/span&gt; &lt;span style="color:#f92672"&gt;=&lt;/span&gt; (&lt;span style="color:#a6e22e"&gt;input&lt;/span&gt;: &lt;span style="color:#66d9ef"&gt;number&lt;/span&gt;)&lt;span style="color:#f92672"&gt;:&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;IntermediateState&lt;/span&gt; &lt;span style="color:#f92672"&gt;=&amp;gt;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;mss&lt;/span&gt;: &lt;span style="color:#66d9ef"&gt;input&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;mss_from_left&lt;/span&gt;: &lt;span style="color:#66d9ef"&gt;input&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;mss_from_right&lt;/span&gt;: &lt;span style="color:#66d9ef"&gt;input&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;total_sum&lt;/span&gt;: &lt;span style="color:#66d9ef"&gt;input&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; };
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;};
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;const&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;dot&lt;/span&gt; &lt;span style="color:#f92672"&gt;=&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;lhs&lt;/span&gt;: &lt;span style="color:#66d9ef"&gt;IntermediateState&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;rhs&lt;/span&gt;: &lt;span style="color:#66d9ef"&gt;IntermediateState&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)&lt;span style="color:#f92672"&gt;:&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;IntermediateState&lt;/span&gt; &lt;span style="color:#f92672"&gt;=&amp;gt;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;mss&lt;/span&gt;: &lt;span style="color:#66d9ef"&gt;Math.max&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;lhs&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;mss&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;rhs&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;mss&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;lhs&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;mss_from_right&lt;/span&gt; &lt;span style="color:#f92672"&gt;+&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;rhs&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;mss_from_left&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;mss_from_left&lt;/span&gt;: &lt;span style="color:#66d9ef"&gt;Math.max&lt;/span&gt;(
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;lhs&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;mss_from_left&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;lhs&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;total_sum&lt;/span&gt; &lt;span style="color:#f92672"&gt;+&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;rhs&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;mss_from_left&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; ),
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;mss_from_right&lt;/span&gt;: &lt;span style="color:#66d9ef"&gt;Math.max&lt;/span&gt;(
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;rhs&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;mss_from_right&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;lhs&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;mss_from_right&lt;/span&gt; &lt;span style="color:#f92672"&gt;+&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;rhs&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;total_sum&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; ),
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;total_sum&lt;/span&gt;: &lt;span style="color:#66d9ef"&gt;lhs.total_sum&lt;/span&gt; &lt;span style="color:#f92672"&gt;+&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;rhs&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;total_sum&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; };
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;};
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;const&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;h&lt;/span&gt; &lt;span style="color:#f92672"&gt;=&lt;/span&gt; (&lt;span style="color:#a6e22e"&gt;input&lt;/span&gt;: &lt;span style="color:#66d9ef"&gt;Array&lt;/span&gt;&amp;lt;&lt;span style="color:#f92672"&gt;number&lt;/span&gt;&amp;gt;)&lt;span style="color:#f92672"&gt;:&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;IntermediateState&lt;/span&gt; &lt;span style="color:#f92672"&gt;=&amp;gt;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;if&lt;/span&gt; (&lt;span style="color:#a6e22e"&gt;input&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;length&lt;/span&gt; &lt;span style="color:#f92672"&gt;===&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;mss&lt;/span&gt;: &lt;span style="color:#66d9ef"&gt;0&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;mss_from_left&lt;/span&gt;: &lt;span style="color:#66d9ef"&gt;0&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;mss_from_right&lt;/span&gt;: &lt;span style="color:#66d9ef"&gt;0&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;total_sum&lt;/span&gt;: &lt;span style="color:#66d9ef"&gt;0&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; };
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; } &lt;span style="color:#66d9ef"&gt;else&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;input&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;map&lt;/span&gt;((&lt;span style="color:#a6e22e"&gt;x&lt;/span&gt;) &lt;span style="color:#f92672"&gt;=&amp;gt;&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;f&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;x&lt;/span&gt;)).&lt;span style="color:#a6e22e"&gt;reduce&lt;/span&gt;((&lt;span style="color:#a6e22e"&gt;acc&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;curr&lt;/span&gt;) &lt;span style="color:#f92672"&gt;=&amp;gt;&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;dot&lt;/span&gt;(&lt;span style="color:#a6e22e"&gt;acc&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;curr&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;};
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>althttpd: From Top to Bottom</title><link>https://hbina.github.io/20221218_althttp_from_top_to_bottom/</link><pubDate>Sun, 18 Dec 2022 00:00:00 +0000</pubDate><guid>https://hbina.github.io/20221218_althttp_from_top_to_bottom/</guid><description>&lt;h2 id="before-venturing-further"&gt;Before Venturing Further&amp;hellip;&lt;/h2&gt;
&lt;p&gt;It&amp;rsquo;s nice to have the codebase open as reference.
Each chapters will cover mostly 1 function and I wouldn&amp;rsquo;t go through every single bit.
Just the parts that I find interesting.
I will cover the global variables as we go through.&lt;/p&gt;
&lt;p&gt;Sometimes there will be backtracking and jumping ahead of the source code as I see necessary.&lt;/p&gt;
&lt;p&gt;Please read about the design philosophy &lt;a href="https://sqlite.org/althttpd/doc/trunk/althttpd.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Check out the source code &lt;a href="https://hbina.github.io/althttpd/althttpd.c"&gt;here&lt;/a&gt;.&lt;/p&gt;</description></item></channel></rss>